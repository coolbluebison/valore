"""empty message

Revision ID: 9a0f23c649b5
Revises: 
Create Date: 2023-12-11 20:33:55.383971

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a0f23c649b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Assumptions_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('net_revenue_interest', sa.Float(), nullable=False),
    sa.Column('working_interest', sa.Float(), nullable=False),
    sa.Column('list_of_oil_deducts', sa.String(), nullable=True),
    sa.Column('list_of_gas_deducts', sa.String(), nullable=True),
    sa.Column('severance_tax', sa.Float(), nullable=True),
    sa.Column('ad_valorem_tax', sa.Float(), nullable=True),
    sa.Column('total_monthly_opex', sa.Float(), nullable=True),
    sa.Column('drilling_costs', sa.Float(), nullable=True),
    sa.Column('completion_costs', sa.Float(), nullable=True),
    sa.Column('pipeline_costs', sa.Float(), nullable=True),
    sa.Column('contingency_costs', sa.Float(), nullable=True),
    sa.Column('prod_start_month', sa.String(), nullable=True),
    sa.Column('prod_start_year', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Assumptions_table'))
    )
    op.create_table('Gas_concentration_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('methane', sa.Float(), nullable=True),
    sa.Column('ethane', sa.Float(), nullable=True),
    sa.Column('propane', sa.Float(), nullable=True),
    sa.Column('i_butane', sa.Float(), nullable=True),
    sa.Column('n_butane', sa.Float(), nullable=True),
    sa.Column('i_pentane', sa.Float(), nullable=True),
    sa.Column('n_pentane', sa.Float(), nullable=True),
    sa.Column('hexane_plus', sa.Float(), nullable=True),
    sa.Column('helium', sa.Float(), nullable=True),
    sa.Column('other', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Gas_concentration_table'))
    )
    op.create_table('Pricing_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('oil_price', sa.Float(), nullable=True),
    sa.Column('methane_price', sa.Float(), nullable=True),
    sa.Column('helium_price', sa.Float(), nullable=True),
    sa.Column('ethane_price', sa.Float(), nullable=True),
    sa.Column('propane_price', sa.Float(), nullable=True),
    sa.Column('i_butane_price', sa.Float(), nullable=True),
    sa.Column('n_butane_price', sa.Float(), nullable=True),
    sa.Column('i_pentane_price', sa.Float(), nullable=True),
    sa.Column('n_pentane_price', sa.Float(), nullable=True),
    sa.Column('hexane_plus_price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Pricing_table'))
    )
    op.create_table('Production_curve_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_curve', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Production_curve_table'))
    )
    op.create_table('Project_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Project_table'))
    )
    op.create_table('User_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('_password_hash', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_User_table'))
    )
    op.create_table('Well_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('coordinates', sa.String(), nullable=True),
    sa.Column('production_curve_id', sa.Integer(), nullable=True),
    sa.Column('gas_concentration_id', sa.Integer(), nullable=True),
    sa.Column('assumption_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assumption_id'], ['Assumptions_table.id'], name=op.f('fk_Well_table_assumption_id_Assumptions_table')),
    sa.ForeignKeyConstraint(['gas_concentration_id'], ['Gas_concentration_table.id'], name=op.f('fk_Well_table_gas_concentration_id_Gas_concentration_table')),
    sa.ForeignKeyConstraint(['production_curve_id'], ['Production_curve_table.id'], name=op.f('fk_Well_table_production_curve_id_Production_curve_table')),
    sa.ForeignKeyConstraint(['project_id'], ['Project_table.id'], name=op.f('fk_Well_table_project_id_Project_table')),
    sa.ForeignKeyConstraint(['user_id'], ['User_table.id'], name=op.f('fk_Well_table_user_id_User_table')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Well_table'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Well_table')
    op.drop_table('User_table')
    op.drop_table('Project_table')
    op.drop_table('Production_curve_table')
    op.drop_table('Pricing_table')
    op.drop_table('Gas_concentration_table')
    op.drop_table('Assumptions_table')
    # ### end Alembic commands ###
